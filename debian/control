Source: python-futurist
Section: python
Priority: optional
Maintainer: PKG OpenStack <openstack-devel@lists.alioth.debian.org>
Uploaders: Thomas Goirand <zigo@debian.org>,
Build-Depends: debhelper (>= 9),
               dh-python,
               python-all,
               python-pbr (>= 1.8),
               python-setuptools,
               python-sphinx,
               python3-all,
               python3-pbr (>= 1.8),
               python3-setuptools,
Build-Depends-Indep: python-concurrent.futures (>= 3.0),
                     python-contextlib2,
                     python-coverage (>= 3.6),
                     python-eventlet (>= 0.17.4),
                     python-hacking (>= 0.10.0),
                     python-monotonic,
                     python-oslosphinx (>= 2.5.0),
                     python-oslotest (>= 1.10.0),
                     python-six (>= 1.9.0),
                     python-testscenarios,
                     python-testtools (>= 1.4.0),
                     python3-contextlib2,
                     python3-eventlet (>= 0.17.4),
                     python3-monotonic,
                     python3-oslotest (>= 1.10.0),
                     python3-six (>= 1.9.0),
                     python3-testscenarios,
                     python3-testtools (>= 1.4.0),
                     subunit (>= 1.1),
                     testrepository,
Standards-Version: 3.9.6
Vcs-Browser: http://anonscm.debian.org/gitweb/?p=openstack/python-futurist.git
Vcs-Git: git://anonscm.debian.org/openstack/python-futurist.git
Homepage: http://www.openstack.org/

Package: python-futurist
Architecture: all
Depends: python-concurrent.futures (>= 3.0),
         python-contextlib2,
         python-monotonic,
         python-pbr (>= 1.8),
         python-six (>= 1.9.0),
         ${misc:Depends},
         ${python:Depends},
Suggests: python-futurist-doc,
Description: useful additions to futures, from the future - Python 2.x
 Code from the future, delivered to you in the now. For example:
  * A futurist.GreenThreadPoolExecutor using eventlet green thread pools. It
    provides a standard executor API/interface and it also gathers execution
    statistics.
  * A futurist.ProcessPoolExecutor derivative that gathers execution
    statistics.
  * A futurist.SynchronousExecutor that doesn’t run concurrently. It has the
    same executor API/interface and it also gathers execution statistics.
  * A futurist.ThreadPoolExecutor derivative that gathers execution statistics.
  * A futurist.periodics.PeriodicWorker that can use the previously mentioned
    executors to run asynchronous work periodically in parallel or
    synchronously.
  * etc.
 .
 This package contains the Python 2.x module.

Package: python3-futurist
Architecture: all
Depends: python3-contextlib2,
         python3-monotonic,
         python3-pbr (>= 1.8),
         python3-six (>= 1.9.0),
         ${misc:Depends},
         ${python3:Depends},
Suggests: python-futurist-doc,
Description: useful additions to futures, from the future - Python 3.x
 Code from the future, delivered to you in the now. For example:
  * A futurist.GreenThreadPoolExecutor using eventlet green thread pools. It
    provides a standard executor API/interface and it also gathers execution
    statistics.
  * A futurist.ProcessPoolExecutor derivative that gathers execution
    statistics.
  * A futurist.SynchronousExecutor that doesn’t run concurrently. It has the
    same executor API/interface and it also gathers execution statistics.
  * A futurist.ThreadPoolExecutor derivative that gathers execution statistics.
  * A futurist.periodics.PeriodicWorker that can use the previously mentioned
    executors to run asynchronous work periodically in parallel or
    synchronously.
  * etc.
 .
 This package contains the Python 3.x module.

Package: python-futurist-doc
Section: doc
Architecture: all
Depends: ${misc:Depends},
         ${sphinxdoc:Depends},
Description: useful additions to futures, from the future - doc
 Code from the future, delivered to you in the now. For example:
  * A futurist.GreenThreadPoolExecutor using eventlet green thread pools. It
    provides a standard executor API/interface and it also gathers execution
    statistics.
  * A futurist.ProcessPoolExecutor derivative that gathers execution
    statistics.
  * A futurist.SynchronousExecutor that doesn’t run concurrently. It has the
    same executor API/interface and it also gathers execution statistics.
  * A futurist.ThreadPoolExecutor derivative that gathers execution statistics.
  * A futurist.periodics.PeriodicWorker that can use the previously mentioned
    executors to run asynchronous work periodically in parallel or
    synchronously.
  * etc.
 .
 This package contains the documentation.
